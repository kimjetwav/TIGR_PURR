singularity {

    autoMounts=true
    enabled=true

}

params.application = "FMRIPREP_CIFTIFY"
params.version = "1.3.0.post2-2.3.1"
retry_val=3
simg = "/archive/code/containers/FMRIPREP_CIFTIFY/tigrlab_fmriprep_ciftify_1.3.0.post2-2.3.1-2019-04-04-8ebe3500bebf.img"
invocation = "/archive/code/boutiques_jsons/invocations/fmriprep_ciftify-1.3.0.post2-2.3.1_invocation.json"
descriptor = "/archive/code/boutiques_jsons/descriptors/fmriprep_ciftify-1.3.0.post2-2.3.1.json"
license="/freesurfer/6.0.0/build/"


profiles {

    //DEFAULT
    standard {

        process.executor = "SLURM"
        process.queue = "high-moby"
        params.simg = "$simg"
        params.invocation= "$invocation"
        params.descriptor = "$descriptor"
        params.license = "/opt/quarantine/$license"
    }

    kimel {

        process.executor = "SLURM"
        process.queue = "high-moby"
        params.simg = "$simg"
        params.invocation= "$invocation"
        params.descriptor = "$descriptor"
        params.license = "/opt/quarantine/$license"
    }

    scc {

        process.executor = "SLURM"
        process.queue = "long"
        params.simg = "/KIMEL/tigrlab/$simg"
        params.invocation= "/KIMEL/tigrlab/$invocation"
        params.descriptor = "/KIMEL/tigrlab/$descriptor"
        params.license = "/KIMEL/quarantine/$license"

    }

    local {
        process.executor = "local"
        params.simg = "$simg"
        params.invocation= "$invocation"
        params.descriptor = "$descriptor"
        params.license = "/opt/quarantine/$license"

    }


}
includeConfig './report_invocation.nf.config'


process {
    withName: modify_invocation{
        executor = 'local'

    }
    withName: save_invocation { executor="local" }
    withName: run_bids {

        maxRetries = retry_val
        errorStrategy = {task.attempt == retry_val ? "finish" : "retry"}
        clusterOptions = "--time=24:00:00 --mem-per-cpu=1024 \
         --cpus-per-task=4 --job-name ciftify_pipeline \
         --nodes=1"

    }
}
